[{"D:\\project\\coding-swamp-\\src\\App.tsx":"1","D:\\project\\coding-swamp-\\src\\index.tsx":"2","D:\\project\\coding-swamp-\\src\\react-app-env.d.ts":"3","D:\\project\\coding-swamp-\\src\\components\\layout\\Page.tsx":"4","D:\\project\\coding-swamp-\\src\\style\\GlobalStyles.tsx":"5","D:\\project\\coding-swamp-\\src\\style\\theme.ts":"6","D:\\project\\coding-swamp-\\src\\components\\sign\\EmailAuth\\index.tsx":"7","D:\\project\\coding-swamp-\\src\\components\\sign\\EmailAuth\\styles.ts":"8","D:\\project\\coding-swamp-\\src\\components\\sign\\SignButton.tsx":"9","D:\\project\\coding-swamp-\\src\\components\\sign\\signInput\\SignInput.tsx":"10","D:\\project\\coding-swamp-\\src\\components\\sign\\signInput\\styles.ts":"11","D:\\project\\coding-swamp-\\src\\components\\sign\\SignUpForm\\index.tsx":"12","D:\\project\\coding-swamp-\\src\\components\\sign\\SignUpForm\\style.ts":"13","D:\\project\\coding-swamp-\\src\\lib\\api\\httpClient.ts":"14","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\emailAuthAPI.ts":"15","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\GitHubLoginAPI.ts":"16","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\SignInAPI.ts":"17","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\SignUpAPI.ts":"18","D:\\project\\coding-swamp-\\src\\lib\\constants\\constants.ts":"19","D:\\project\\coding-swamp-\\src\\lib\\constants\\Url.ts":"20","D:\\project\\coding-swamp-\\src\\lib\\constants\\ValidationMessage.ts":"21","D:\\project\\coding-swamp-\\src\\lib\\hooks\\useAppDispatch.ts":"22","D:\\project\\coding-swamp-\\src\\lib\\hooks\\useAppSelector.ts":"23","D:\\project\\coding-swamp-\\src\\lib\\store\\index.ts":"24","D:\\project\\coding-swamp-\\src\\lib\\types\\UserInterface.ts":"25","D:\\project\\coding-swamp-\\src\\lib\\util\\getValidation.ts":"26","D:\\project\\coding-swamp-\\src\\pages\\main\\index.tsx":"27","D:\\project\\coding-swamp-\\src\\pages\\sign\\Callback.tsx":"28","D:\\project\\coding-swamp-\\src\\pages\\sign\\SignIn\\index.tsx":"29","D:\\project\\coding-swamp-\\src\\pages\\sign\\SignIn\\styles.ts":"30","D:\\project\\coding-swamp-\\src\\pages\\sign\\SignUp\\index.tsx":"31","D:\\project\\coding-swamp-\\src\\pages\\sign\\SignUp\\styles.ts":"32","D:\\project\\coding-swamp-\\src\\Router\\PrivateRouter.tsx":"33","D:\\project\\coding-swamp-\\src\\Router\\PublicRouter.tsx":"34","D:\\project\\coding-swamp-\\src\\Router\\Router.tsx":"35","D:\\project\\coding-swamp-\\src\\components\\Header\\index.tsx":"36","D:\\project\\coding-swamp-\\src\\components\\Header\\styles.ts":"37","D:\\project\\coding-swamp-\\src\\lib\\util\\localStorage.ts":"38","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\emailAuthAPI.ts":"39","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\GitHubLoginAPI.ts":"40","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\SignInAPI.ts":"41","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\SignUpAPI.ts":"42","D:\\project\\coding-swamp-\\src\\lib\\api\\Member\\MemberAPI.ts":"43","D:\\project\\coding-swamp-\\src\\lib\\util\\decodeJWT.ts":"44","D:\\project\\coding-swamp-\\src\\lib\\store\\signForm\\signInFormSlice.ts":"45","D:\\project\\coding-swamp-\\src\\lib\\store\\signForm\\userFormSlice.ts":"46","D:\\project\\coding-swamp-\\src\\lib\\store\\memberSlice.ts":"47"},{"size":434,"mtime":1675824575939,"results":"48","hashOfConfig":"49"},{"size":381,"mtime":1675824576592,"results":"50","hashOfConfig":"49"},{"size":40,"mtime":1675666315192,"results":"51","hashOfConfig":"49"},{"size":412,"mtime":1675668518479,"results":"52","hashOfConfig":"49"},{"size":390,"mtime":1675824577860,"results":"53","hashOfConfig":"49"},{"size":255,"mtime":1675668518783,"results":"54","hashOfConfig":"49"},{"size":2370,"mtime":1675851222900,"results":"55","hashOfConfig":"49"},{"size":1171,"mtime":1675824576224,"results":"56","hashOfConfig":"49"},{"size":803,"mtime":1675824576252,"results":"57","hashOfConfig":"49"},{"size":694,"mtime":1675824576284,"results":"58","hashOfConfig":"49"},{"size":620,"mtime":1675824576390,"results":"59","hashOfConfig":"49"},{"size":4126,"mtime":1675851143219,"results":"60","hashOfConfig":"49"},{"size":1564,"mtime":1675824576564,"results":"61","hashOfConfig":"49"},{"size":855,"mtime":1675847171842,"results":"62","hashOfConfig":"49"},{"size":1548,"mtime":1675824576729,"results":"63","hashOfConfig":"49"},{"size":1205,"mtime":1675838974107,"results":"64","hashOfConfig":"49"},{"size":1228,"mtime":1675838974419,"results":"65","hashOfConfig":"49"},{"size":1715,"mtime":1675824576815,"results":"66","hashOfConfig":"49"},{"size":31,"mtime":1675824576824,"results":"67","hashOfConfig":"49"},{"size":498,"mtime":1675840114851,"results":"68","hashOfConfig":"49"},{"size":270,"mtime":1675824576836,"results":"69","hashOfConfig":"49"},{"size":145,"mtime":1675824576951,"results":"70","hashOfConfig":"49"},{"size":177,"mtime":1675824576984,"results":"71","hashOfConfig":"49"},{"size":692,"mtime":1675853949521,"results":"72","hashOfConfig":"49"},{"size":531,"mtime":1675853781765,"results":"73","hashOfConfig":"49"},{"size":376,"mtime":1675824577131,"results":"74","hashOfConfig":"49"},{"size":356,"mtime":1675854002053,"results":"75","hashOfConfig":"49"},{"size":950,"mtime":1675840837733,"results":"76","hashOfConfig":"49"},{"size":3244,"mtime":1675851013475,"results":"77","hashOfConfig":"49"},{"size":1125,"mtime":1675826176089,"results":"78","hashOfConfig":"49"},{"size":347,"mtime":1675824577319,"results":"79","hashOfConfig":"49"},{"size":448,"mtime":1675824577335,"results":"80","hashOfConfig":"49"},{"size":337,"mtime":1675838974767,"results":"81","hashOfConfig":"49"},{"size":329,"mtime":1675838974461,"results":"82","hashOfConfig":"49"},{"size":1382,"mtime":1675824577721,"results":"83","hashOfConfig":"49"},{"size":202,"mtime":1675840628373,"results":"84","hashOfConfig":"49"},{"size":426,"mtime":1675840628513,"results":"85","hashOfConfig":"49"},{"size":253,"mtime":1675824577029,"results":"86","hashOfConfig":"49"},{"size":1548,"mtime":1675824576729,"results":"87","hashOfConfig":"49"},{"size":1205,"mtime":1675838974107,"results":"88","hashOfConfig":"49"},{"size":1228,"mtime":1675838974419,"results":"89","hashOfConfig":"49"},{"size":1715,"mtime":1675824576815,"results":"90","hashOfConfig":"49"},{"size":643,"mtime":1675852546761,"results":"91","hashOfConfig":"49"},{"size":234,"mtime":1675848425824,"results":"92","hashOfConfig":"49"},{"size":1485,"mtime":1675851012989,"results":"93","hashOfConfig":"49"},{"size":1862,"mtime":1675851209727,"results":"94","hashOfConfig":"49"},{"size":983,"mtime":1675855787083,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15jbd5x",{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\project\\coding-swamp-\\src\\App.tsx",[],[],"D:\\project\\coding-swamp-\\src\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\react-app-env.d.ts",[],[],"D:\\project\\coding-swamp-\\src\\components\\layout\\Page.tsx",[],[],"D:\\project\\coding-swamp-\\src\\style\\GlobalStyles.tsx",[],[],"D:\\project\\coding-swamp-\\src\\style\\theme.ts",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\EmailAuth\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\EmailAuth\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\SignButton.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\signInput\\SignInput.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\signInput\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\SignUpForm\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\SignUpForm\\style.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\httpClient.ts",["242","243"],[],"import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\nimport { getLocalStorageToken } from '../util/localStorage'\n\ndeclare module 'axios' {\n  type AxiosRequest<T = any> = Promise<T>\n}\n\nabstract class HttpClient {\n  protected readonly instance: AxiosInstance\n\n  public constructor() {\n    this.instance = axios.create({\n      baseURL: '',\n    })\n\n    this._initializeRequestInterceptor()\n  }\n\n  private _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest)\n  }\n\n  protected _handleRequest = (config: AxiosRequestConfig | any) => {\n    const accessToken = getLocalStorageToken()\n    if (accessToken && config.headers) {\n      config.headers.Authorization = `Bearer ${accessToken}`\n      config.headers['Content-Type'] = `application/json`\n    }\n    return config\n  }\n}\n\nexport default HttpClient\n","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\emailAuthAPI.ts",["244","245"],[],"import { AxiosResponse } from 'axios'\nimport { EMAILAUTH_URL } from '../../constants/Url'\nimport HttpClient from '../httpClient'\n\nclass EmailAuth extends HttpClient {\n  public constructor() {\n    super()\n\n    this._initializeResponseInterceptor()\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError)\n  }\n\n  private _handleResponse = (response: AxiosResponse | any) => {\n    const responseCode = response.status\n    switch (responseCode) {\n      case 200:\n        alert('이메일 인증이 완료되었습니다.')\n        break\n      case 201:\n        alert('작성하신 이메일로 인증코드가 전송되었습니다.')\n        break\n      default:\n        break\n    }\n    return responseCode\n  }\n\n  private _handleError = (error: any) => {\n    const { response: errorResponse } = error\n    const errorCode = errorResponse.status\n\n    if (errorCode === 401) {\n      alert('인증번호를 다시 확인해주세요. 5분이 경과한 경우 다시 이메일 인증을 진행해주세요.')\n    }\n  }\n\n  public emailAuth = (data: string) => this.instance.post(EMAILAUTH_URL, { email: data })\n\n  public emailAuthCode = async (data: string) => {\n    const params = new URLSearchParams()\n    params.append('authCode', data)\n\n    await this.instance.post(\n      '/api/auth/email/confirm',\n      {},\n      { headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, params },\n    )\n  }\n}\n\nconst emailAuthAPI = new EmailAuth()\n\nexport { emailAuthAPI }\n","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\GitHubLoginAPI.ts",["246"],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\SignInAPI.ts",["247"],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\SignUpAPI.ts",["248"],[],"import { AxiosResponse } from 'axios'\nimport HttpClient from '../httpClient'\nimport { UserParam } from '../../types/UserInterface'\nimport { SIGNUP_URL } from '../../constants/Url'\n\nclass SignUpAPI extends HttpClient {\n  public constructor() {\n    super()\n\n    this._initializeResponseInterceptor()\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError)\n  }\n\n  private _handleResponse = (response: AxiosResponse) => {\n    const responseCode = response.status\n    switch (responseCode) {\n      case 200:\n        alert('회원가입이 완료되었습니다. 로그인 페이지로 돌아갑니다.')\n        break\n      case 201:\n        alert('회원가입이 완료되었습니다. 로그인 페이지로 돌아갑니다.')\n        break\n      default:\n        alert('로그인/회원가입 요청이 거절되었습니다. 네트워크를 확인하거나 관리자에게 문의해주세요.')\n    }\n\n    return response\n  }\n\n  protected _handleError = (error: any) => {\n    const { response: errorResponse } = error\n    const errorCode = errorResponse.status\n\n    switch (errorCode) {\n      case 400:\n        alert('이메일 인증을 완료해 주세요')\n        break\n      case 409:\n        alert('동일한 이메일이 이미 존재합니다.')\n        break\n      default:\n        alert('로그인/회원가입 요청이 거절되었습니다. 네트워크를 확인하거나 관리자에게 문의해주세요.')\n    }\n  }\n\n  public SignUp = (data: UserParam) =>\n    this.instance.post(SIGNUP_URL, data, { headers: { 'Content-Type': 'multipart/form-data' } })\n}\n\nconst signUpAPI = new SignUpAPI()\n\nexport { signUpAPI }\n","D:\\project\\coding-swamp-\\src\\lib\\constants\\constants.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\constants\\Url.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\constants\\ValidationMessage.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\hooks\\useAppDispatch.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\hooks\\useAppSelector.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\store\\index.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\types\\UserInterface.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\util\\getValidation.ts",[],[],"D:\\project\\coding-swamp-\\src\\pages\\main\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\Callback.tsx",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\SignIn\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\SignIn\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\SignUp\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\SignUp\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\Router\\PrivateRouter.tsx",[],[],"D:\\project\\coding-swamp-\\src\\Router\\PublicRouter.tsx",[],[],"D:\\project\\coding-swamp-\\src\\Router\\Router.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\Header\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\Header\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\util\\localStorage.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\emailAuthAPI.ts",["249","250"],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\GitHubLoginAPI.ts",["251"],[],"import { AxiosResponse } from 'axios'\nimport { GITHUB_AUTH_URL } from 'src/lib/constants/Url'\nimport { setLocalStorageToken } from 'src/lib/util/localStorage'\nimport HttpClient from '../httpClient'\n\nclass GitHubLoginAPI extends HttpClient {\n  public constructor() {\n    super()\n\n    this._initializeResponseInterceptor()\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError)\n  }\n\n  private _handleResponse = (response: AxiosResponse) => {\n    setLocalStorageToken(response.data.accessToken)\n    return response\n  }\n\n  protected _handleError = (error: any) => {\n    const { response: errorResponse } = error\n    const errorCode = errorResponse.status\n\n    if (errorCode) alert('요청하신 작업을 수행할 수 없습니다. 관리자에게 문의해주세요.')\n\n    return errorCode\n  }\n\n  public gitHubLogin = (code: string | string[] | qs.ParsedQs | qs.ParsedQs[] | undefined) =>\n    this.instance.post(\n      `${GITHUB_AUTH_URL}?code=${code}`,\n      {},\n      { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } },\n    )\n}\n\nconst gitHubLoginAPI = new GitHubLoginAPI()\n\nexport { gitHubLoginAPI }\n","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\SignInAPI.ts",["252"],[],"import { AxiosResponse } from 'axios'\nimport { SignInParam } from 'src/lib/types/UserInterface'\nimport { SIGNIN_URL } from 'src/lib/constants/Url'\nimport { setLocalStorageToken } from 'src/lib/util/localStorage'\nimport HttpClient from '../httpClient'\n\nclass SignInAPI extends HttpClient {\n  public constructor() {\n    super()\n\n    this._initializeResponseInterceptor()\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError)\n  }\n\n  private _handleResponse = (response: AxiosResponse) => {\n    setLocalStorageToken(response.data.accessToken)\n    return response\n  }\n\n  protected _handleError = (error: any) => {\n    const { response: errorResponse } = error\n    const errorCode = errorResponse.status\n\n    switch (errorCode) {\n      case 401:\n        alert('회원정보가 없습니다. 회원가입을 진행해 주세요.')\n        break\n      default:\n        alert('요청하신 작업을 수행할 수 없습니다. 관리자에게 문의해주세요.')\n        break\n    }\n\n    return errorCode\n  }\n\n  public SignIn = (data: SignInParam) => this.instance.post(SIGNIN_URL, data)\n}\n\nconst signInAPI = new SignInAPI()\n\nexport { signInAPI }\n","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\SignUpAPI.ts",["253"],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\Member\\MemberAPI.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\util\\decodeJWT.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\store\\signForm\\signInFormSlice.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\store\\signForm\\userFormSlice.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\store\\memberSlice.ts",["254"],[],{"ruleId":"255","severity":1,"message":"256","line":5,"column":25,"nodeType":"257","messageId":"258","endLine":5,"endColumn":28,"suggestions":"259"},{"ruleId":"255","severity":1,"message":"256","line":23,"column":60,"nodeType":"257","messageId":"258","endLine":23,"endColumn":63,"suggestions":"260"},{"ruleId":"255","severity":1,"message":"256","line":16,"column":56,"nodeType":"257","messageId":"258","endLine":16,"endColumn":59,"suggestions":"261"},{"ruleId":"255","severity":1,"message":"256","line":31,"column":34,"nodeType":"257","messageId":"258","endLine":31,"endColumn":37,"suggestions":"262"},{"ruleId":"255","severity":1,"message":"256","line":22,"column":36,"nodeType":"257","messageId":"258","endLine":22,"endColumn":39,"suggestions":"263"},{"ruleId":"255","severity":1,"message":"256","line":23,"column":36,"nodeType":"257","messageId":"258","endLine":23,"endColumn":39,"suggestions":"264"},{"ruleId":"255","severity":1,"message":"256","line":33,"column":36,"nodeType":"257","messageId":"258","endLine":33,"endColumn":39,"suggestions":"265"},{"ruleId":"255","severity":1,"message":"256","line":16,"column":56,"nodeType":"257","messageId":"258","endLine":16,"endColumn":59,"suggestions":"266"},{"ruleId":"255","severity":1,"message":"256","line":31,"column":34,"nodeType":"257","messageId":"258","endLine":31,"endColumn":37,"suggestions":"267"},{"ruleId":"255","severity":1,"message":"256","line":22,"column":36,"nodeType":"257","messageId":"258","endLine":22,"endColumn":39,"suggestions":"268"},{"ruleId":"255","severity":1,"message":"256","line":23,"column":36,"nodeType":"257","messageId":"258","endLine":23,"endColumn":39,"suggestions":"269"},{"ruleId":"255","severity":1,"message":"256","line":33,"column":36,"nodeType":"257","messageId":"258","endLine":33,"endColumn":39,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":41,"nodeType":"273","messageId":"274","endLine":1,"endColumn":54},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["275","276"],["277","278"],["279","280"],["281","282"],["283","284"],["285","286"],["287","288"],["289","290"],["291","292"],["293","294"],["295","296"],["297","298"],"@typescript-eslint/no-unused-vars","'PayloadAction' is defined but never used.","Identifier","unusedVar",{"messageId":"299","fix":"300","desc":"301"},{"messageId":"302","fix":"303","desc":"304"},{"messageId":"299","fix":"305","desc":"301"},{"messageId":"302","fix":"306","desc":"304"},{"messageId":"299","fix":"307","desc":"301"},{"messageId":"302","fix":"308","desc":"304"},{"messageId":"299","fix":"309","desc":"301"},{"messageId":"302","fix":"310","desc":"304"},{"messageId":"299","fix":"311","desc":"301"},{"messageId":"302","fix":"312","desc":"304"},{"messageId":"299","fix":"313","desc":"301"},{"messageId":"302","fix":"314","desc":"304"},{"messageId":"299","fix":"315","desc":"301"},{"messageId":"302","fix":"316","desc":"304"},{"messageId":"299","fix":"317","desc":"301"},{"messageId":"302","fix":"318","desc":"304"},{"messageId":"299","fix":"319","desc":"301"},{"messageId":"302","fix":"320","desc":"304"},{"messageId":"299","fix":"321","desc":"301"},{"messageId":"302","fix":"322","desc":"304"},{"messageId":"299","fix":"323","desc":"301"},{"messageId":"302","fix":"324","desc":"304"},{"messageId":"299","fix":"325","desc":"301"},{"messageId":"302","fix":"326","desc":"304"},"suggestUnknown",{"range":"327","text":"328"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"327","text":"329"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"330","text":"328"},{"range":"330","text":"329"},{"range":"331","text":"328"},{"range":"331","text":"329"},{"range":"332","text":"328"},{"range":"332","text":"329"},{"range":"333","text":"328"},{"range":"333","text":"329"},{"range":"334","text":"328"},{"range":"334","text":"329"},{"range":"335","text":"328"},{"range":"335","text":"329"},{"range":"336","text":"328"},{"range":"336","text":"329"},{"range":"337","text":"328"},{"range":"337","text":"329"},{"range":"338","text":"328"},{"range":"338","text":"329"},{"range":"339","text":"328"},{"range":"339","text":"329"},{"range":"340","text":"328"},{"range":"340","text":"329"},[175,178],"unknown","never",[581,584],[448,451],[760,763],[638,641],[686,689],[875,878],[448,451],[760,763],[638,641],[686,689],[875,878]]