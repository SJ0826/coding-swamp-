[{"D:\\project\\coding-swamp-\\src\\App.tsx":"1","D:\\project\\coding-swamp-\\src\\index.tsx":"2","D:\\project\\coding-swamp-\\src\\react-app-env.d.ts":"3","D:\\project\\coding-swamp-\\src\\components\\layout\\Page.tsx":"4","D:\\project\\coding-swamp-\\src\\style\\GlobalStyles.tsx":"5","D:\\project\\coding-swamp-\\src\\style\\theme.ts":"6","D:\\project\\coding-swamp-\\src\\components\\sign\\EmailAuth\\index.tsx":"7","D:\\project\\coding-swamp-\\src\\components\\sign\\EmailAuth\\styles.ts":"8","D:\\project\\coding-swamp-\\src\\components\\sign\\SignButton.tsx":"9","D:\\project\\coding-swamp-\\src\\components\\sign\\signInput\\SignInput.tsx":"10","D:\\project\\coding-swamp-\\src\\components\\sign\\signInput\\styles.ts":"11","D:\\project\\coding-swamp-\\src\\components\\sign\\SignUpForm\\index.tsx":"12","D:\\project\\coding-swamp-\\src\\components\\sign\\SignUpForm\\style.ts":"13","D:\\project\\coding-swamp-\\src\\lib\\api\\httpClient.ts":"14","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\emailAuthAPI.ts":"15","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\GitHubLoginAPI.ts":"16","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\SignInAPI.ts":"17","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\SignUpAPI.ts":"18","D:\\project\\coding-swamp-\\src\\lib\\constants\\constants.ts":"19","D:\\project\\coding-swamp-\\src\\lib\\constants\\Url.ts":"20","D:\\project\\coding-swamp-\\src\\lib\\constants\\ValidationMessage.ts":"21","D:\\project\\coding-swamp-\\src\\lib\\hooks\\useAppDispatch.ts":"22","D:\\project\\coding-swamp-\\src\\lib\\hooks\\useAppSelector.ts":"23","D:\\project\\coding-swamp-\\src\\lib\\store\\index.ts":"24","D:\\project\\coding-swamp-\\src\\lib\\types\\UserInterface.ts":"25","D:\\project\\coding-swamp-\\src\\lib\\util\\getValidation.ts":"26","D:\\project\\coding-swamp-\\src\\pages\\main\\index.tsx":"27","D:\\project\\coding-swamp-\\src\\pages\\sign\\Callback.tsx":"28","D:\\project\\coding-swamp-\\src\\pages\\sign\\SignIn\\index.tsx":"29","D:\\project\\coding-swamp-\\src\\pages\\sign\\SignIn\\styles.ts":"30","D:\\project\\coding-swamp-\\src\\pages\\sign\\SignUp\\index.tsx":"31","D:\\project\\coding-swamp-\\src\\pages\\sign\\SignUp\\styles.ts":"32","D:\\project\\coding-swamp-\\src\\Router\\PrivateRouter.tsx":"33","D:\\project\\coding-swamp-\\src\\Router\\PublicRouter.tsx":"34","D:\\project\\coding-swamp-\\src\\Router\\Router.tsx":"35","D:\\project\\coding-swamp-\\src\\components\\Header\\index.tsx":"36","D:\\project\\coding-swamp-\\src\\components\\Header\\styles.ts":"37","D:\\project\\coding-swamp-\\src\\lib\\util\\localStorage.ts":"38","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\emailAuthAPI.ts":"39","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\GitHubLoginAPI.ts":"40","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\SignInAPI.ts":"41","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\SignUpAPI.ts":"42","D:\\project\\coding-swamp-\\src\\lib\\api\\Member\\MemberAPI.ts":"43","D:\\project\\coding-swamp-\\src\\lib\\util\\decodeJWT.ts":"44","D:\\project\\coding-swamp-\\src\\lib\\store\\signForm\\signInFormSlice.ts":"45","D:\\project\\coding-swamp-\\src\\lib\\store\\signForm\\userFormSlice.ts":"46"},{"size":434,"mtime":1675824575939,"results":"47","hashOfConfig":"48"},{"size":381,"mtime":1675824576592,"results":"49","hashOfConfig":"48"},{"size":40,"mtime":1675666315192,"results":"50","hashOfConfig":"48"},{"size":412,"mtime":1675668518479,"results":"51","hashOfConfig":"48"},{"size":390,"mtime":1675824577860,"results":"52","hashOfConfig":"48"},{"size":255,"mtime":1675668518783,"results":"53","hashOfConfig":"48"},{"size":2370,"mtime":1675851222900,"results":"54","hashOfConfig":"48"},{"size":1171,"mtime":1675824576224,"results":"55","hashOfConfig":"48"},{"size":803,"mtime":1675824576252,"results":"56","hashOfConfig":"48"},{"size":694,"mtime":1675824576284,"results":"57","hashOfConfig":"48"},{"size":620,"mtime":1675824576390,"results":"58","hashOfConfig":"48"},{"size":4126,"mtime":1675851143219,"results":"59","hashOfConfig":"48"},{"size":1564,"mtime":1675824576564,"results":"60","hashOfConfig":"48"},{"size":855,"mtime":1675847171842,"results":"61","hashOfConfig":"48"},{"size":1548,"mtime":1675824576729,"results":"62","hashOfConfig":"48"},{"size":1205,"mtime":1675838974107,"results":"63","hashOfConfig":"48"},{"size":1228,"mtime":1675838974419,"results":"64","hashOfConfig":"48"},{"size":1715,"mtime":1675824576815,"results":"65","hashOfConfig":"48"},{"size":31,"mtime":1675824576824,"results":"66","hashOfConfig":"48"},{"size":498,"mtime":1675840114851,"results":"67","hashOfConfig":"48"},{"size":270,"mtime":1675824576836,"results":"68","hashOfConfig":"48"},{"size":145,"mtime":1675824576951,"results":"69","hashOfConfig":"48"},{"size":177,"mtime":1675824576984,"results":"70","hashOfConfig":"48"},{"size":544,"mtime":1675851251793,"results":"71","hashOfConfig":"48"},{"size":283,"mtime":1675824577106,"results":"72","hashOfConfig":"48"},{"size":376,"mtime":1675824577131,"results":"73","hashOfConfig":"48"},{"size":363,"mtime":1675851143435,"results":"74","hashOfConfig":"48"},{"size":950,"mtime":1675840837733,"results":"75","hashOfConfig":"48"},{"size":3244,"mtime":1675851013475,"results":"76","hashOfConfig":"48"},{"size":1125,"mtime":1675826176089,"results":"77","hashOfConfig":"48"},{"size":347,"mtime":1675824577319,"results":"78","hashOfConfig":"48"},{"size":448,"mtime":1675824577335,"results":"79","hashOfConfig":"48"},{"size":337,"mtime":1675838974767,"results":"80","hashOfConfig":"48"},{"size":329,"mtime":1675838974461,"results":"81","hashOfConfig":"48"},{"size":1382,"mtime":1675824577721,"results":"82","hashOfConfig":"48"},{"size":202,"mtime":1675840628373,"results":"83","hashOfConfig":"48"},{"size":426,"mtime":1675840628513,"results":"84","hashOfConfig":"48"},{"size":253,"mtime":1675824577029,"results":"85","hashOfConfig":"48"},{"size":1548,"mtime":1675824576729,"results":"86","hashOfConfig":"48"},{"size":1205,"mtime":1675838974107,"results":"87","hashOfConfig":"48"},{"size":1228,"mtime":1675838974419,"results":"88","hashOfConfig":"48"},{"size":1715,"mtime":1675824576815,"results":"89","hashOfConfig":"48"},{"size":671,"mtime":1675851259253,"results":"90","hashOfConfig":"48"},{"size":234,"mtime":1675848425824,"results":"91","hashOfConfig":"48"},{"size":1485,"mtime":1675851012989,"results":"92","hashOfConfig":"48"},{"size":1862,"mtime":1675851209727,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15jbd5x",{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\coding-swamp-\\src\\App.tsx",[],[],"D:\\project\\coding-swamp-\\src\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\react-app-env.d.ts",[],[],"D:\\project\\coding-swamp-\\src\\components\\layout\\Page.tsx",[],[],"D:\\project\\coding-swamp-\\src\\style\\GlobalStyles.tsx",[],[],"D:\\project\\coding-swamp-\\src\\style\\theme.ts",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\EmailAuth\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\EmailAuth\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\SignButton.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\signInput\\SignInput.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\signInput\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\SignUpForm\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\sign\\SignUpForm\\style.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\httpClient.ts",["237","238"],[],"import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\nimport { getLocalStorageToken } from '../util/localStorage'\n\ndeclare module 'axios' {\n  type AxiosRequest<T = any> = Promise<T>\n}\n\nabstract class HttpClient {\n  protected readonly instance: AxiosInstance\n\n  public constructor() {\n    this.instance = axios.create({\n      baseURL: '',\n    })\n\n    this._initializeRequestInterceptor()\n  }\n\n  private _initializeRequestInterceptor = () => {\n    this.instance.interceptors.request.use(this._handleRequest)\n  }\n\n  protected _handleRequest = (config: AxiosRequestConfig | any) => {\n    const accessToken = getLocalStorageToken()\n    if (accessToken && config.headers) {\n      config.headers.Authorization = `Bearer ${accessToken}`\n      config.headers['Content-Type'] = `application/json`\n    }\n    return config\n  }\n}\n\nexport default HttpClient\n","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\emailAuthAPI.ts",["239","240"],[],"import { AxiosResponse } from 'axios'\nimport { EMAILAUTH_URL } from '../../constants/Url'\nimport HttpClient from '../httpClient'\n\nclass EmailAuth extends HttpClient {\n  public constructor() {\n    super()\n\n    this._initializeResponseInterceptor()\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError)\n  }\n\n  private _handleResponse = (response: AxiosResponse | any) => {\n    const responseCode = response.status\n    switch (responseCode) {\n      case 200:\n        alert('이메일 인증이 완료되었습니다.')\n        break\n      case 201:\n        alert('작성하신 이메일로 인증코드가 전송되었습니다.')\n        break\n      default:\n        break\n    }\n    return responseCode\n  }\n\n  private _handleError = (error: any) => {\n    const { response: errorResponse } = error\n    const errorCode = errorResponse.status\n\n    if (errorCode === 401) {\n      alert('인증번호를 다시 확인해주세요. 5분이 경과한 경우 다시 이메일 인증을 진행해주세요.')\n    }\n  }\n\n  public emailAuth = (data: string) => this.instance.post(EMAILAUTH_URL, { email: data })\n\n  public emailAuthCode = async (data: string) => {\n    const params = new URLSearchParams()\n    params.append('authCode', data)\n\n    await this.instance.post(\n      '/api/auth/email/confirm',\n      {},\n      { headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, params },\n    )\n  }\n}\n\nconst emailAuthAPI = new EmailAuth()\n\nexport { emailAuthAPI }\n","D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\GitHubLoginAPI.ts",["241"],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\SignInAPI.ts",["242"],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\Sign\\SignUpAPI.ts",["243"],[],"import { AxiosResponse } from 'axios'\nimport HttpClient from '../httpClient'\nimport { UserParam } from '../../types/UserInterface'\nimport { SIGNUP_URL } from '../../constants/Url'\n\nclass SignUpAPI extends HttpClient {\n  public constructor() {\n    super()\n\n    this._initializeResponseInterceptor()\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError)\n  }\n\n  private _handleResponse = (response: AxiosResponse) => {\n    const responseCode = response.status\n    switch (responseCode) {\n      case 200:\n        alert('회원가입이 완료되었습니다. 로그인 페이지로 돌아갑니다.')\n        break\n      case 201:\n        alert('회원가입이 완료되었습니다. 로그인 페이지로 돌아갑니다.')\n        break\n      default:\n        alert('로그인/회원가입 요청이 거절되었습니다. 네트워크를 확인하거나 관리자에게 문의해주세요.')\n    }\n\n    return response\n  }\n\n  protected _handleError = (error: any) => {\n    const { response: errorResponse } = error\n    const errorCode = errorResponse.status\n\n    switch (errorCode) {\n      case 400:\n        alert('이메일 인증을 완료해 주세요')\n        break\n      case 409:\n        alert('동일한 이메일이 이미 존재합니다.')\n        break\n      default:\n        alert('로그인/회원가입 요청이 거절되었습니다. 네트워크를 확인하거나 관리자에게 문의해주세요.')\n    }\n  }\n\n  public SignUp = (data: UserParam) =>\n    this.instance.post(SIGNUP_URL, data, { headers: { 'Content-Type': 'multipart/form-data' } })\n}\n\nconst signUpAPI = new SignUpAPI()\n\nexport { signUpAPI }\n","D:\\project\\coding-swamp-\\src\\lib\\constants\\constants.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\constants\\Url.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\constants\\ValidationMessage.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\hooks\\useAppDispatch.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\hooks\\useAppSelector.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\store\\index.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\types\\UserInterface.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\util\\getValidation.ts",[],[],"D:\\project\\coding-swamp-\\src\\pages\\main\\index.tsx",["244"],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\Callback.tsx",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\SignIn\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\SignIn\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\SignUp\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\pages\\sign\\SignUp\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\Router\\PrivateRouter.tsx",[],[],"D:\\project\\coding-swamp-\\src\\Router\\PublicRouter.tsx",[],[],"D:\\project\\coding-swamp-\\src\\Router\\Router.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\Header\\index.tsx",[],[],"D:\\project\\coding-swamp-\\src\\components\\Header\\styles.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\util\\localStorage.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\emailAuthAPI.ts",["245","246"],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\GitHubLoginAPI.ts",["247"],[],"import { AxiosResponse } from 'axios'\nimport { GITHUB_AUTH_URL } from 'src/lib/constants/Url'\nimport { setLocalStorageToken } from 'src/lib/util/localStorage'\nimport HttpClient from '../httpClient'\n\nclass GitHubLoginAPI extends HttpClient {\n  public constructor() {\n    super()\n\n    this._initializeResponseInterceptor()\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError)\n  }\n\n  private _handleResponse = (response: AxiosResponse) => {\n    setLocalStorageToken(response.data.accessToken)\n    return response\n  }\n\n  protected _handleError = (error: any) => {\n    const { response: errorResponse } = error\n    const errorCode = errorResponse.status\n\n    if (errorCode) alert('요청하신 작업을 수행할 수 없습니다. 관리자에게 문의해주세요.')\n\n    return errorCode\n  }\n\n  public gitHubLogin = (code: string | string[] | qs.ParsedQs | qs.ParsedQs[] | undefined) =>\n    this.instance.post(\n      `${GITHUB_AUTH_URL}?code=${code}`,\n      {},\n      { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } },\n    )\n}\n\nconst gitHubLoginAPI = new GitHubLoginAPI()\n\nexport { gitHubLoginAPI }\n","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\SignInAPI.ts",["248"],[],"import { AxiosResponse } from 'axios'\nimport { SignInParam } from 'src/lib/types/UserInterface'\nimport { SIGNIN_URL } from 'src/lib/constants/Url'\nimport { setLocalStorageToken } from 'src/lib/util/localStorage'\nimport HttpClient from '../httpClient'\n\nclass SignInAPI extends HttpClient {\n  public constructor() {\n    super()\n\n    this._initializeResponseInterceptor()\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(this._handleResponse, this._handleError)\n  }\n\n  private _handleResponse = (response: AxiosResponse) => {\n    setLocalStorageToken(response.data.accessToken)\n    return response\n  }\n\n  protected _handleError = (error: any) => {\n    const { response: errorResponse } = error\n    const errorCode = errorResponse.status\n\n    switch (errorCode) {\n      case 401:\n        alert('회원정보가 없습니다. 회원가입을 진행해 주세요.')\n        break\n      default:\n        alert('요청하신 작업을 수행할 수 없습니다. 관리자에게 문의해주세요.')\n        break\n    }\n\n    return errorCode\n  }\n\n  public SignIn = (data: SignInParam) => this.instance.post(SIGNIN_URL, data)\n}\n\nconst signInAPI = new SignInAPI()\n\nexport { signInAPI }\n","D:\\project\\coding-swamp-\\src\\lib\\api\\sign\\SignUpAPI.ts",["249"],[],"D:\\project\\coding-swamp-\\src\\lib\\api\\Member\\MemberAPI.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\util\\decodeJWT.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\store\\signForm\\signInFormSlice.ts",[],[],"D:\\project\\coding-swamp-\\src\\lib\\store\\signForm\\userFormSlice.ts",[],[],{"ruleId":"250","severity":1,"message":"251","line":5,"column":25,"nodeType":"252","messageId":"253","endLine":5,"endColumn":28,"suggestions":"254"},{"ruleId":"250","severity":1,"message":"251","line":23,"column":60,"nodeType":"252","messageId":"253","endLine":23,"endColumn":63,"suggestions":"255"},{"ruleId":"250","severity":1,"message":"251","line":16,"column":56,"nodeType":"252","messageId":"253","endLine":16,"endColumn":59,"suggestions":"256"},{"ruleId":"250","severity":1,"message":"251","line":31,"column":34,"nodeType":"252","messageId":"253","endLine":31,"endColumn":37,"suggestions":"257"},{"ruleId":"250","severity":1,"message":"251","line":22,"column":36,"nodeType":"252","messageId":"253","endLine":22,"endColumn":39,"suggestions":"258"},{"ruleId":"250","severity":1,"message":"251","line":23,"column":36,"nodeType":"252","messageId":"253","endLine":23,"endColumn":39,"suggestions":"259"},{"ruleId":"250","severity":1,"message":"251","line":33,"column":36,"nodeType":"252","messageId":"253","endLine":33,"endColumn":39,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":8,"column":5,"nodeType":"263","messageId":"264","endLine":8,"endColumn":16},{"ruleId":"250","severity":1,"message":"251","line":16,"column":56,"nodeType":"252","messageId":"253","endLine":16,"endColumn":59,"suggestions":"265"},{"ruleId":"250","severity":1,"message":"251","line":31,"column":34,"nodeType":"252","messageId":"253","endLine":31,"endColumn":37,"suggestions":"266"},{"ruleId":"250","severity":1,"message":"251","line":22,"column":36,"nodeType":"252","messageId":"253","endLine":22,"endColumn":39,"suggestions":"267"},{"ruleId":"250","severity":1,"message":"251","line":23,"column":36,"nodeType":"252","messageId":"253","endLine":23,"endColumn":39,"suggestions":"268"},{"ruleId":"250","severity":1,"message":"251","line":33,"column":36,"nodeType":"252","messageId":"253","endLine":33,"endColumn":39,"suggestions":"269"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["270","271"],["272","273"],["274","275"],["276","277"],["278","279"],["280","281"],["282","283"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["284","285"],["286","287"],["288","289"],["290","291"],["292","293"],{"messageId":"294","fix":"295","desc":"296"},{"messageId":"297","fix":"298","desc":"299"},{"messageId":"294","fix":"300","desc":"296"},{"messageId":"297","fix":"301","desc":"299"},{"messageId":"294","fix":"302","desc":"296"},{"messageId":"297","fix":"303","desc":"299"},{"messageId":"294","fix":"304","desc":"296"},{"messageId":"297","fix":"305","desc":"299"},{"messageId":"294","fix":"306","desc":"296"},{"messageId":"297","fix":"307","desc":"299"},{"messageId":"294","fix":"308","desc":"296"},{"messageId":"297","fix":"309","desc":"299"},{"messageId":"294","fix":"310","desc":"296"},{"messageId":"297","fix":"311","desc":"299"},{"messageId":"294","fix":"312","desc":"296"},{"messageId":"297","fix":"313","desc":"299"},{"messageId":"294","fix":"314","desc":"296"},{"messageId":"297","fix":"315","desc":"299"},{"messageId":"294","fix":"316","desc":"296"},{"messageId":"297","fix":"317","desc":"299"},{"messageId":"294","fix":"318","desc":"296"},{"messageId":"297","fix":"319","desc":"299"},{"messageId":"294","fix":"320","desc":"296"},{"messageId":"297","fix":"321","desc":"299"},"suggestUnknown",{"range":"322","text":"323"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"322","text":"324"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"325","text":"323"},{"range":"325","text":"324"},{"range":"326","text":"323"},{"range":"326","text":"324"},{"range":"327","text":"323"},{"range":"327","text":"324"},{"range":"328","text":"323"},{"range":"328","text":"324"},{"range":"329","text":"323"},{"range":"329","text":"324"},{"range":"330","text":"323"},{"range":"330","text":"324"},{"range":"331","text":"323"},{"range":"331","text":"324"},{"range":"332","text":"323"},{"range":"332","text":"324"},{"range":"333","text":"323"},{"range":"333","text":"324"},{"range":"334","text":"323"},{"range":"334","text":"324"},{"range":"335","text":"323"},{"range":"335","text":"324"},[175,178],"unknown","never",[581,584],[448,451],[760,763],[638,641],[686,689],[875,878],[448,451],[760,763],[638,641],[686,689],[875,878]]